services:
  db:
    image: postgres:17
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data

  prestart:
    image: '${DOCKER_IMAGE?Variable not set}:${TAG-latest}'
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
        restart: true
    command: bash scripts/prestart.sh

  backend:
    image: '${DOCKER_IMAGE?Variable not set}:${TAG-latest}'
    restart: always
    networks:
      - default
    depends_on:
      db:
        condition: service_healthy
        restart: true
      prestart:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/utils/health-check/"]
      interval: 10s
      timeout: 5s
      retries: 5
    build:
      context: .
      dockerfile: Dockerfile

volumes:
  app-db-data:
