services:
  db:
    image: postgres:17
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  prestart:
    image: '${DOCKER_IMAGE?Variable not set}:${TAG-latest}'
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
        restart: true
    command: bash scripts/prestart.sh
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  server:
    image: '${DOCKER_IMAGE?Variable not set}:${TAG-latest}'
    restart: always
    networks:
      - default
    depends_on:
      db:
        condition: service_healthy
        restart: true
      prestart:
        condition: service_completed_successfully
    ports:
      - "80:8000"
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  profiler:
    image: '${DOCKER_IMAGE?Variable not set}:${TAG-latest}'
    command: python src/profiler_app.py
    restart: always
    networks:
      - default
    depends_on:
      db:
        condition: service_healthy
        restart: true
      prestart:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  app-db-data:
